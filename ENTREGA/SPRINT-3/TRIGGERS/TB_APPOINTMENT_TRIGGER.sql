DROP TABLE tb_appointment_audit

-- TABELA DE AUDITORIA
CREATE TABLE tb_appointment_audit (
    audit_id         NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    operation        VARCHAR2(10), 
    address_id       NUMBER,       
    changed_by       VARCHAR2(255),
    change_timestamp TIMESTAMP    
);

-- TRIGGER
CREATE OR REPLACE TRIGGER trg_tb_appointment_audit
AFTER INSERT OR UPDATE OR DELETE ON tb_appointment
FOR EACH ROW
DECLARE
    v_operation VARCHAR2(10);
BEGIN
    IF INSERTING THEN
        v_operation := 'INSERT';
    ELSIF UPDATING THEN
        v_operation := 'UPDATE';
    ELSIF DELETING THEN
        v_operation := 'DELETE';
    END IF;

    INSERT INTO tb_appointment_audit (operation, address_id, changed_by, change_timestamp)
    VALUES (
        v_operation,
        NVL(:NEW.id, :OLD.id), 
        SYS_CONTEXT('USERENV', 'SESSION_USER'), 
        SYSTIMESTAMP 
    );
END;

--- TESTES ---

select * from tb_appointment;

--CRIAÇÃO
BEGIN
    appointment_pkg.INSERT_APPOINTMENT_WITH_VALIDATION(
        p_date_appointment => TO_DATE('2025-04-10', 'YYYY-MM-DD'),
        p_time_appointment => '10:00',
        p_user_id => 1,
        p_clinic_id => 1,
        p_patient_id => 1,
        p_procedure_type_id => 1,
        p_img_url_initial => 'https://example.com/inicial.jpg',
        p_img_url_final => 'https://example.com/final.jpg',
        p_procedure_status_id => 1
    );
END;


--EXCEPTION
BEGIN
    appointment_pkg.INSERT_APPOINTMENT_WITH_VALIDATION(
        p_date_appointment => TO_DATE('2024-04-10', 'YYYY-MM-DD'),
        p_time_appointment => '10:00',
        p_user_id => 1,
        p_clinic_id => 1,
        p_patient_id => 1,
        p_procedure_type_id => 1,
        p_img_url_initial => 'https://example.com/inicial.jpg',
        p_img_url_final => 'https://example.com/final.jpg',
        p_procedure_status_id => 1
    );
END;

--DELETE
BEGIN
    appointment_pkg.DELETE_APPOINTMENT(p_id => 15);
END;

--VALIDAÇÃO AUDIT
SELECT * FROM tb_appointment_audit ORDER BY change_timestamp DESC;
